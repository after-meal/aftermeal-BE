name: Deployment

on:
  workflow_dispatch: {}

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and Push
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/sikhoo0-server:latest

  deploy:
    needs: [build]
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Create .env file
        run: |
          echo APP_HOST=${{ secrets.APP_HOST }} >> .env
          echo APP_PORT=${{ secrets.APP_PORT }} >> .env
          echo DB_HOST=${{ secrets.DB_HOST }} >> .env
          echo DB_PORT=${{ secrets.DB_PORT }} >> .env
          echo DB_USER=${{ secrets.DB_USER }} >> .env
          echo DB_PW=${{ secrets.DB_PASSWORD }} >> .env
          echo DB_NAME=${{ secrets.DB_DATABASE }} >> .env
          echo ACCESS_TOKEN_SECRET=${{ secrets.ACCESS_TOKEN_SECRET }} >> .env
          echo REFRESH_TOKEN_SECRET=${{ secrets.REFRESH_TOKEN_SECRET }} >> .env
          echo ACCESS_TOKEN_EXPIRY_TIME=${{ secrets.ACCESS_TOKEN_EXPIRY_TIME }} >> .env
          echo REFRESH_TOKEN_EXPIRY_TIME=${{ secrets.REFRESH_TOKEN_EXPIRY_TIME }} >> .env

      - name: Set up SSH for Docker Context
        run: |
          eval $(ssh-agent -s)
          mkdir -p ~/.ssh
          ssh-add ~/.ssh/${{ secrets.KEY }}

      - name: Create Docker Context
        run: |
          docker context create sikhoo0-server-context \
            --docker "host=ssh://${{ secrets.USERNAME }}@${{ secrets.HOST }}"
          docker context use sikhoo0-server-context

      - name: Deploy application
        run: |
          docker pull ${{ secrets.DOCKER_USERNAME }}/sikhoo0-server:latest

          if [ $(docker ps -q app) ]; then
            docker compose -f docker-compose.prod.yml build app
            docker compose -f docker-compose.prod.yml --no-deps up -d app
          fi

          docker compose -f docker-compose.prod.yml up -d
